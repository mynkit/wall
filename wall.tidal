import qualified Sound.Tidal.Tempo as T

resetCyclesTo n = T.changeTempo (sTempoMV tidal) (\t tempo -> tempo {T.atTime = t, T.atCycle = n})

setcps (120/60/4)

all $ (|* gain 1.0)

do
  resetCyclesTo (5-0.05)
  let
    reverb = pF "reverb"
    ice = pF "ice"
    elem' xs x = elem x xs
    moogPat = "[[<a3,e4> d4 e4 <e4,af4>]*2 [<a4,e4> d4 e4 <e4,af4>]*2] [[<d4,b3> a3 b3 e4]*2 [<d4,b3> a3 b3 e4]*2]"
    -- moogPatH = (harmonizer 9 (1)) <$> moogPat
    moogPatH = moogPat
  d1
    $ (|* gain 0.95)
    $ slow (wchoose [(1, 0.2), (2, 0.8)])
    $ (0.75 <~)
    $ sometimesBy 0.9 ((|- n 12).(|* gain 1.4))
    $ s "SinOscSynthBend/7 SinOscSynthBend/5"
    # n "<fs4,e5,e6,af6> <e4,fs5,a6,b5>"
    # reverb 0.5
    # gain "0.95 1.0"
    # pan "0.05 0.95"
    # sustain 10
    # hpf 1000
    # slide 0.25 # sustainpedal 0.25
  d2
    $ (|* gain 1.0)
    -- $ (|+ n (-2))
    $ slow 2
    $ stut' 5 (3/32) ((|* gain 0.7).(|* lpf 0.8).(|> slide 0))
    $ sometimesBy 0.9 (jux (rev))
    $ sometimesBy 0.3 ((|> slide (choose [0,0.5,-0.25,-0.5,1])).(|> sustainpedal 0.25))
    $ swingBy (1/32) 16
    -- $ (|+ n (wchoose [(0, 0.4), (2, 0.2), (5, 0.2), (7, 0.2)]))
    $ (|+ n 12)
    $ sometimesBy 0.6 ((|+ n 12).(|* gain 0.9))
    $ s "MyMoog*16 MyMoog*16"
    # n moogPatH
    # sustain 1.3
    # pitch1 (range 0.6 2.3 $ slow 2 $ rand)
    # room 0.4
    # lpf 2000
    # hpf 60 # hpq 0.6
    # pan (slow 3 $ sine)
    -- # gain (wchoose [(0, 0.95), (0.7, 0.05)])
    -- # gain (wchoose [(0, 0.9), (0.6, 0.05), (0.8, 0.05)])
    # gain (wchoose [(0, 0.7), (0.5, 0.1), (0.7, 0.1), (0.8, 0.1)])
    -- # gain (wchoose [(0, 0.5), (0.4, 0.1), (0.5, 0.1), (0.6, 0.1), (0.7, 0.1), (0.8, 0.1)])
    -- # gain (wchoose [(0.4, 0.2), (0.5, 0.2), (0.6, 0.2), (0.7, 0.2), (0.8, 0.2)])
  d3
    $ (|* gain 1.2)
    $ someCyclesBy 0.05 ((ply "4 6").(|* gain 0.85).(|> pan (choose [0.1,0.9])))
    $ sometimesBy 0.3 (jux (rev))
    $ slow 3
    $ s "[~ superhammondBend/3? ~] superhammondBend/2? ~ [~ ~ [~ ~ superhammondBend?] superhammondBend]"
    # voice 1 # n "a3 e4 a3 [a3 [a3 e4]]" # sustain "0.17 0.17 0 [0 [0.14 0.17]]"
    # sustainpedal 0.3 # slide "2 0 0 [0 [0 2]]" # hpf 60 # hpq 0.3
    # gain "1.0 0.5 0 [0 [1.1 1.2]]"
    -- # gain "0 0 0 [0 [1.1 1.2]]"
    # pan (range 0.3 0.7 rand)
  d4 -- footsteps
    $ (|* gain 0.8)
    $ slow 0.75
    $ stack [
      s "~ foot ~ ~",
      degradeBy 0.8 $ s "~ [~ foot] ~ ~"
    ]
    # n (irand 2)
    # gain "[1.1 0.7]*4"
    # pan rand
    # hpf 60 # hpq 0.2
  d5 -- bass
    $ (|* gain 1.1)
    $ slow (1.25)
    $ every' 4 2 (|> gain 1.0)
    $ (|> voice 0)
    $ s "~ ~ [superhammondBend!2 ~ ~] ~"
    # shape 0.4
    # n "<e1,e3>" # sustain "0 0 [0.13 0.4 0 0] 0"
    # gain 0
  d6 -- moderateã€€bass
    $ (|* gain 1.0)
    $ when (<5) (|> gain 0)
    $ when (>67) (|> gain 0)
    $ slow 2.5
    $ cat [
    s "superhammondBend" # n "a3"
    ,
    s "superhammondBend" # n "e3"
    ]
    # gain 0.4
    # voice 2
    # cut 1
  d7 -- bubble
    $ (|* gain 1.0)
    $ fast (range 4 30 rand)
    $ s "bubble" # n (range 0 10 rand) # speed (range 0.7 1.2 rand)
    # pan (fast 1.5 rand)
    # gain 0.55
  d8 -- click
    $ (|* gain 1.3)
    $ fast 2
    $ (|- n 7)
    $ s "~ SinOscSynthBend"
    # n "<af4,af5,af6>" # hpf 700 # lpf 800
    # sustain 0.05
    # pan (fast 2.5 rand)
    # gain (range 0.6 0.9 rand)
  d9 -- knock
    $ (|* gain 1.02)
    $ sometimesBy 0.3 ((density 1).(ply "2 4").(|* gain 0.9))
    $ sometimesBy 0.25 (density 2)
    $ sometimesBy 0.6 (jux(rev))
    $ (# n (irand 13))
    $ (# pan (range 0.3 0.7 rand))
    $ (# gain (wchoose [(0, 0.3), (1, 0.7)]))
    -- $ (# gain (wchoose [(0, 0.2), (1, 0.8)]))
    $ s "[knock(3,8,2)|knock(4,7,2)|knock(3,5,2)|knock(3,4,2)]"
  d10 -- door open close
    $ (|* gain 1.2)
    $ sometimesBy 0.3 (|> speed "-1")
    $ sometimesBy 0.32 (jux(rev))
    $ slow 3
    $ every' 4 3 (|> gain 1.0)
    $ s "dooropen doorclose"
    # gain 0
  d11 -- shower
    $ (|* gain 0.77)
    $ sometimesBy 0.3 (|> speed "-1")
    $ every' 16 15 (|> gain 1)
    $ degradeBy 0.1 $ s "~ shower"
    # gain 0
    # pan 0.7
  d12 -- guitar backing
    $ (|* gain 1.0)
    $ when (<8) (|> gain 0)
    $ when (>64) (|> gain 0)
    $ slow 2.5
    $ cat [
    s "A69" # n "0"
    ,
    (0.005 ~>) $ s "A69" # n "1"
    ]
    # gain 1.0
    # hpf 60 # hpq 0.4
    # pan 0.1
  d13
    $ seqP [
    (5, 6, (
      stack [
        s "guitar:0" # speed "-1" # pan 0.85 # gain 1.5
        ,
        s "guitar:0" # speed "1" # pan 0.15 # gain 1.2
      ]
    ))
    ]
